{"version":3,"file":"static/js/818.bd2c0e21.chunk.js","mappings":"oLACA,MAA4B,4BAA5B,EAAsE,8BAAtE,EAAmH,+BAAnH,EAAgK,8BAAhK,EAAuM,yBAAvM,EAAwO,wBAAxO,EAA2Q,2BAA3Q,EAA6S,uB,yFCOhSA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACC,EAAA,EAAD,UACGH,EAASI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,UAACC,EAAA,GAAD,CAAmBC,UAAWC,EAA9B,WACA,SAACC,EAAA,EAAD,CAAmBC,SAAS,QAAQH,UAAWC,IAC9CJ,EAFD,KAESC,GACT,SAACM,EAAA,EAAD,CACEC,KAAK,SACL,aAAW,SACXC,KAAK,WACLC,QAAS,kBAAMf,GAASgB,EAAAA,EAAAA,IAAcZ,GAA7B,EAJX,UAME,SAACa,EAAA,EAAD,CAAYN,SAAS,gBATRP,EADH,KAgBnB,E,uCCrBYc,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOd,EAAP,KAAae,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAee,EAAf,KACMrB,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAACqB,EAAA,EAAD,CAAOC,UAAW,EAAGf,UAAWC,EAAhC,UACE,kBAAMe,SATS,SAAAC,GACjBA,EAAEC,iBACF1B,GAAS2B,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMC,OAAAA,KAC5Bc,EAAQ,IACRC,EAAU,GACX,EAI+Bb,UAAWC,EAAvC,WACE,SAACmB,EAAA,EAAD,CACApB,UAAWC,EACVoB,SAAU,SAAAJ,GAAC,OAAIL,EAAQK,EAAEK,OAAOC,MAArB,EACVC,MAAM,OACNC,QAAQ,WACRpB,KAAK,OACLR,KAAK,OACL0B,MAAO1B,EACP6B,UAAQ,KAEV,SAACN,EAAA,EAAD,CACApB,UAAWC,EACVoB,SAAU,SAAAJ,GAAC,OAAIJ,EAAUI,EAAEK,OAAOC,MAAvB,EACVC,MAAM,SACNC,QAAQ,WACRpB,KAAK,MACLR,KAAK,SACL0B,MAAOzB,EACP4B,UAAQ,KAEV,SAACC,EAAA,EAAD,CAAQF,QAAQ,YAAYpB,KAAK,SAASL,UAAWC,EAArD,6BAMP,EC3CY2B,EAAiB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaN,EAAY,EAAZA,MAC5C,OACE,SAACH,EAAA,EAAD,CACEpB,UAAWC,EACXoB,SAAUQ,EACVL,MAAM,kBACNC,QAAQ,WACRpB,KAAK,OACLR,KAAK,SACL0B,MAAOA,GAGZ,E,wCC+BD,EApCiB,WACf,IAAM/B,GAAWC,EAAAA,EAAAA,MACjB,GAA6BqC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAV,IAAtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,GAASL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMK,UAAV,IAehC,OALAC,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MAEV,GAAE,KAGD,iCACI,SAAC5B,EAAD,KACF,SAAC6B,EAAA,EAAD,CAAYd,QAAQ,KAAKe,UAAU,MAAMC,GAAI,CAAEC,SAAU,GAAzD,UACE,iBAAM1C,UAAWC,EAAjB,yBAEF,SAAC2B,EAAD,CAAgBC,YApBA,SAAAZ,GAClBzB,GAASmD,EAAAA,EAAAA,IAAY1B,EAAEK,OAAOC,OAC/B,EAkB6CA,MAAOY,IAChDD,IAAU,SAAC5C,EAAD,CAAaC,SAhBnB2C,EAAMC,QAAO,SAAAS,GAAO,OACzBA,EAAQ/C,KAAKgD,cAAcC,SAASX,EAAOU,cADlB,MAiBxBZ,IACC,SAACc,EAAA,EAAD,CAAKN,GAAI,CAAEO,MAAO,KAAlB,UACE,SAACC,EAAA,EAAD,CAAUC,UAAU,aAM7B,C","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/ContactList.jsx","components/Contacts/ContactForm.jsx","components/Contacts/FilterContacts.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__SkTzd\",\"contactForm\":\"Contacts_contactForm__bBdJt\",\"contactInput\":\"Contacts_contactInput__Ta+04\",\"filterInput\":\"Contacts_filterInput__Eo5XP\",\"addBtn\":\"Contacts_addBtn__mFT-u\",\"title\":\"Contacts_title__-mq9F\",\"callIcon\":\"Contacts_callIcon__BMJZK\",\"text\":\"Contacts_text__Cijp1\"};","import PropTypes from 'prop-types';\nimport css from './Contacts.module.css';\nimport { deleteContact } from 'redux/operations/operations';\nimport { useDispatch } from 'react-redux';\nimport { IconButton, ListItem, List } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PersonRoundedIcon from '@mui/icons-material/PersonRounded';\n\nexport const ContactList = ({ filtered }) => {\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {filtered.map(({ id, name, number }) => (\n        <ListItem key={id} className={css.text}>\n        <PersonRoundedIcon fontSize=\"small\" className={css.callIcon} />\n        {name}: {number}\n        <IconButton\n          type=\"button\"\n          aria-label=\"delete\"\n          size=\"standart\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n      </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  filtered: PropTypes.arrayOf(\n    PropTypes.PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\n","import css from './Contacts.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations/operations'; \nimport { Paper, TextField, Button } from '@mui/material';\n\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const submitForm = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Paper elevation={3} className={css.container} >\n      <form onSubmit={submitForm} className={css.contactForm}>\n        <TextField\n        className={css.contactInput}\n         onChange={e => setName(e.target.value)}\n          label='name'\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n        />\n        <TextField\n        className={css.contactInput}\n         onChange={e => setNumber(e.target.value)}\n          label='number'\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\" className={css.addBtn}>\n        Add contact\n        </Button>\n      </form>\n      </Paper>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\nimport css from './Contacts.module.css';\n\nexport const FilterContacts = ({ inputFilter, value }) => {\n  return (\n    <TextField\n      className={css.filterInput}\n      onChange={inputFilter}\n      label=\"filter contacts\"\n      variant=\"standard\"\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n    />\n  );\n};\n\nFilterContacts.propTypes = {\n  inputFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import css from './Contacts.module.css';\nimport React from 'react';\nimport { ContactList } from './ContactList';\nimport { ContactForm } from './ContactForm';\nimport { FilterContacts } from './FilterContacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from 'redux/store';\nimport { fetchContacts } from 'redux/operations/operations';\nimport { useEffect } from 'react';\nimport { Typography, Skeleton, Box } from '@mui/material';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, items } = useSelector(state => state.myContacts);\n  const filter = useSelector(state => state.filterTask);\n  const inputFilter = e => {\n    dispatch(filterValue(e.target.value));\n  };\n\n  const filterContacts = () => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n        <ContactForm />\n      <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\n        <span className={css.title}>Contacts</span>\n      </Typography>\n      <FilterContacts inputFilter={inputFilter} value={filter} />\n      {items &&  <ContactList filtered={filterContacts()} />  }\n      {isLoading && (\n        <Box sx={{ width: 300 }}>\n          <Skeleton animation=\"wave\" />\n        </Box>\n      )}\n    \n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactList","filtered","dispatch","useDispatch","List","map","id","name","number","ListItem","className","css","PersonRounded","fontSize","IconButton","type","size","onClick","deleteContact","Delete","ContactForm","useState","setName","setNumber","Paper","elevation","onSubmit","e","preventDefault","addContact","TextField","onChange","target","value","label","variant","required","Button","FilterContacts","inputFilter","useSelector","state","myContacts","isLoading","items","filter","filterTask","useEffect","fetchContacts","Typography","component","sx","flexGrow","filterValue","contact","toLowerCase","includes","Box","width","Skeleton","animation"],"sourceRoot":""}